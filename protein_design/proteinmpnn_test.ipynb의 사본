{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"private_outputs":true,"provenance":[],"mount_file_id":"18qXS-VEOwXk4Pfocr51_wyxUp2KoNNoQ","authorship_tag":"ABX9TyPwbGLmDpX8Izp9rJR1Uz3y"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","source":["from google.colab import drive\n","import os\n","\n","# Google Drive 마운트\n","drive.mount('/content/drive')\n","\n","# 디렉토리 생성\n","!mkdir -p /content/drive/MyDrive/heme_binder_diffusion\n","\n","# GitHub 저장소 클론\n","!git clone https://github.com/ikalvet/heme_binder_diffusion.git /content/drive/MyDrive/heme_binder_diffusion\n","\n","# 클론한 저장소로 이동\n","os.chdir('/content/drive/MyDrive/heme_binder_diffusion')\n","\n","# 디렉토리 내용 확인\n","!ls\n"],"metadata":{"id":"qZ2qVmH3tEp6"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["!pip install numpy pandas matplotlib"],"metadata":{"id":"bE7Sr0kiwxHh"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["import os\n","\n","# Define your paths\n","SCRIPT_DIR = '/content/drive/MyDrive/heme_binder_diffusion'\n","WDIR = '/content/drive/MyDrive/working_dir'\n","DIFFUSION_DIR = '/content/drive/MyDrive/diffusion_dir'\n","PYTHON = {'general': '/usr/bin/python3', 'proteinMPNN': '/content/drive/MyDrive/heme_binder_diffusion/proteinMPNN_script.py'}\n","\n","# Ensure directories exist\n","os.makedirs(WDIR, exist_ok=True)\n","os.makedirs(DIFFUSION_DIR, exist_ok=True)\n"],"metadata":{"id":"GYn4kSUJw3zg"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["import os\n","\n","# Define paths to each directory\n","directories = [\n","    '/content/drive/MyDrive/heme_binder_diffusion/scripts/utils',\n","    '/content/drive/MyDrive/heme_binder_diffusion/scripts/diffusion_analysis',\n","    '/content/drive/MyDrive/heme_binder_diffusion/scripts/design',\n","    '/content/drive/MyDrive/heme_binder_diffusion/scripts/af2'\n","]\n","\n","# List files in each directory\n","for directory in directories:\n","    print(f\"\\nFiles in {directory}:\")\n","    for filename in os.listdir(directory):\n","        print(filename)\n"],"metadata":{"id":"scqI0hVx1SiI"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["import subprocess\n","import os\n","import glob\n","\n","# Define paths\n","SCRIPT_DIR = '/content/drive/MyDrive/heme_binder_diffusion'\n","DIFFUSION_DIR = '/content/drive/MyDrive/diffusion_dir'\n","WDIR = '/content/drive/MyDrive/working_dir'\n","PYTHON = {'general': '/usr/bin/python3', 'proteinMPNN': '/content/proteinMPNN'}\n","\n","# Ensure directories exist\n","os.makedirs(WDIR, exist_ok=True)\n","\n","# Find diffused backbone PDB files\n","diffused_backbones_good = glob.glob(f\"{DIFFUSION_DIR}/1nuztest_0.pdb\")\n","assert len(diffused_backbones_good) > 0, \"No good backbones found!\"\n","\n","os.chdir(WDIR)\n","\n","MPNN_DIR = f\"{WDIR}/1_proteinmpnn\"\n","os.makedirs(MPNN_DIR, exist_ok=True)\n","os.chdir(MPNN_DIR)\n","\n","# Create a dummy masked_pos.jsonl file (for demonstration)\n","with open(\"masked_pos.jsonl\", \"w\") as f:\n","    f.write(\"{}\")  # Dummy content\n","\n","# Setup proteinMPNN commands\n","MPNN_temperatures = [0.1, 0.2, 0.3]\n","MPNN_outputs_per_temperature = 5\n","MPNN_omit_AAs = \"CM\"\n","\n","commands_mpnn = []\n","cmds_filename_mpnn = \"commands_mpnn\"\n","with open(cmds_filename_mpnn, \"w\") as file:\n","    for T in MPNN_temperatures:\n","        for f in diffused_backbones_good:\n","            commands_mpnn.append(f\"{PYTHON['proteinMPNN']} /content/drive/MyDrive/heme_binder_diffusion/scripts/design/heme_pocket_ligMPNN.py \"\n","                                 f\"--model_type protein_mpnn --ligand_mpnn_use_atom_context 0 \"\n","                                 \"--fixed_residues_multi masked_pos.jsonl --out_folder ./ \"\n","                                 f\"--number_of_batches {MPNN_outputs_per_temperature} --temperature {T} \"\n","                                 f\"--omit_AA {MPNN_omit_AAs} --pdb_path {f} \"\n","                                 f\"--checkpoint_protein_mpnn /content/drive/MyDrive/heme_binder_diffusion/scripts/design/lib/LigandMPNN/model_params/proteinmpnn_v_48_020.pt\\n\")\n","            file.write(commands_mpnn[-1])\n","\n","print(\"Example MPNN command:\")\n","print(commands_mpnn[-1])\n","\n","# Running proteinMPNN commands (without PyRosetta dependency)\n","for cmd in commands_mpnn:\n","    print(f\"Running command: {cmd}\")\n","    result = subprocess.run(cmd, shell=True, capture_output=True, text=True)\n","    print(result.stdout)\n","    if result.stderr:\n","        print(result.stderr)\n"],"metadata":{"id":"BPiWrTuOw5LQ"},"execution_count":null,"outputs":[]}]}