{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"private_outputs":true,"provenance":[]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":null,"metadata":{"id":"qUrhun0JughQ"},"outputs":[],"source":["!pip install google-generativeai requests beautifulsoup4 pandas\n","import requests\n","from bs4 import BeautifulSoup\n","import pandas as pd\n","import re\n","import google.generativeai as genai\n","from google.colab import userdata  # Colab의 보안 자격 증명관련\n","import time\n","import IPython.display as display\n","from IPython.display import HTML\n","\n","class LeedongjinReviewer:\n","    def __init__(self, api_key=None):\n","        # API 키 설정\n","        if api_key is None:\n","            try:\n","                api_key = userdata.get('GOOGLE_API_KEY')\n","                print(\"Colab에 저장된 API 키를 사용합니다.\")\n","            except:\n","                api_key = input(\"Google Gemini API 키를 입력하세요: \")\n","\n","        # Gemini API 설정 (최신 버전 사용)\n","        genai.configure(api_key=api_key)\n","        # 모델 설정을 최신 버전으로 업데이트\n","        self.model = genai.GenerativeModel('gemini-2.0-flash')\n","\n","        # 샘플 한줄평 로드\n","        self.load_sample_reviews()\n","        print(\"이동진 평론가 스타일 한줄평 생성기가 초기화되었습니다.\")\n","    # few-shot learning을 위해서 대표적인 몇 가지 커멘트를 업로드\n","    def load_sample_reviews(self):\n","        \"\"\"간단한 샘플 리뷰 데이터를 로드합니다.\"\"\"\n","        self.Leedongjin_reviews = [\n","            {\n","                'movie_title': '그랜드 투어',\n","                'review': '풍경들 사이로 미끄러져 흘러간 시네마의 몽환.'\n","            },\n","            {\n","                'movie_title': '승부',\n","                'review': '전설적인 순간을 고스란히 살려낸 배우들이 감탄스럽다.'\n","            },\n","            {\n","                'movie_title': '계시록',\n","                'review': '안을 들여다봐야 할 때 하염없이 바깥만 내다본 자들의 수렁이 오싹하다.'\n","            },\n","            {\n","                'movie_title': '기생충',\n","                'review': '상승과 하강으로 명징하게 직조해낸 신랄하면서 처연한 계급 우화.'\n","            },\n","            {\n","                'movie_title': '인터스텔라',\n","                'review': 'SF를 향한 놀런의 웅대한 꿈. 그 한가운데 자리한 가족영화의 간절한 순간.'\n","            },\n","            {\n","                'movie_title': '원스 어폰 어 타임... 인 할리우드',\n","                'review': '참혹한 가십의 세계에 박제됐던 한 인물을 영화에 대한 꿈과 사랑이 넘쳤던 영화인의 자리로 옮긴다.'\n","            },\n","            {\n","                'movie_title': '덩케르크',\n","                'review': '플롯의 마술사, 야심찬 뺄셈으로 특별한 전쟁영화를 조각하다.'\n","            },\n","            {\n","                'movie_title': '너의 이름은',\n","                'review': '갈라지는 것들의 파괴력과 이어지는 것들의 치유력. 이 영화가 주는 감동의 태반은 끝내 연결하려는 안간힘에서 온다.'\n","            },\n","            {\n","                'movie_title': '드라이브 마이 카',\n","                'review': '치유도 창작도 그 핵심은 어디에 어떻게 귀기울일 것인가의 문제라는 경청의 걸작.'\n","            },\n","            {\n","                'movie_title': '헤어질 결심',\n","                'review': '파란색으로도 보이고 녹색으로도 보이는 그 옷처럼, 미결과 영원 사이에서 사무치도록.'\n","            }\n","        ]\n","\n","        print(f\"기본 샘플 한줄평 {len(self.Leedongjin_reviews)}개가 로드되었습니다.\")\n","        return self.Leedongjin_reviews\n","\n","    def generate_movie_info(self, movie_title):\n","        print(f\"영화 '{movie_title}'에 대한 정보를 Gemini로 생성 중...\")\n","\n","        prompt = f\"\"\"\n","        영화 \"{movie_title}\"에 대한 기본 정보가 필요합니다. 다음 정보를 알려주세요:\n","\n","        1. 감독\n","        2. 주요 출연 배우 (3명까지)\n","        3. 장르\n","        4. 개봉 연도\n","        5. 줄거리 (200자 내외)\n","\n","        응답은 다음과 같은 구조로 깔끔하게 제공해주세요:\n","        감독: [감독 이름]\n","        출연: [배우1, 배우2, 배우3]\n","        장르: [장르]\n","        개봉: [개봉 연도]\n","        줄거리: [줄거리 요약]\n","\n","        확실한 정보만 제공하고, 확실하지 않은 경우 \"정보 없음\"이라고 표시해주세요.\n","        \"\"\"\n","\n","        try:\n","            response = self.model.generate_content(prompt)\n","            info_text = response.text.strip()\n","\n","            # 초기 영화 정보 구조 설정\n","            movie_info = {\n","                'title': movie_title,\n","                'director': \"정보 없음\",\n","                'actors': \"정보 없음\",\n","                'genre': \"정보 없음\",\n","                'release': \"정보 없음\",\n","                'plot': \"정보 없음\"\n","            }\n","\n","            # 각 항목 추출\n","            director_match = re.search(r'감독:\\s+(.*?)(?:\\n|$)', info_text)\n","            if director_match and \"정보 없음\" not in director_match.group(1):\n","                movie_info['director'] = director_match.group(1).strip()\n","\n","            actors_match = re.search(r'출연:\\s+(.*?)(?:\\n|$)', info_text)\n","            if actors_match and \"정보 없음\" not in actors_match.group(1):\n","                movie_info['actors'] = actors_match.group(1).strip()\n","\n","            genre_match = re.search(r'장르:\\s+(.*?)(?:\\n|$)', info_text)\n","            if genre_match and \"정보 없음\" not in genre_match.group(1):\n","                movie_info['genre'] = genre_match.group(1).strip()\n","\n","            release_match = re.search(r'개봉:\\s+(.*?)(?:\\n|$)', info_text)\n","            if release_match and \"정보 없음\" not in release_match.group(1):\n","                movie_info['release'] = release_match.group(1).strip()\n","\n","            plot_match = re.search(r'줄거리:\\s+(.*?)(?:\\n\\n|$)', info_text, re.DOTALL)\n","            if plot_match and \"정보 없음\" not in plot_match.group(1):\n","                movie_info['plot'] = plot_match.group(1).strip()\n","\n","            print(\"\\n영화 정보 생성 완료!\")\n","\n","            # 수집된 정보 출력\n","            print(f\"제목: {movie_info['title']}\")\n","            print(f\"감독: {movie_info['director']}\")\n","            print(f\"출연: {movie_info['actors']}\")\n","            print(f\"장르: {movie_info['genre']}\")\n","            print(f\"개봉: {movie_info['release']}\")\n","\n","            if movie_info['plot'] != \"정보 없음\":\n","                plot_preview = movie_info['plot'][:150] + \"...\" if len(movie_info['plot']) > 150 else movie_info['plot']\n","                print(f\"줄거리: {plot_preview}\")\n","\n","            return movie_info\n","\n","        except Exception as e:\n","            print(f\"영화 정보 생성 중 오류 발생: {e}\")\n","            # 기본 정보만 반환\n","            return {\n","                'title': movie_title,\n","                'director': \"정보 없음\",\n","                'actors': \"정보 없음\",\n","                'genre': \"정보 없음\",\n","                'release': \"정보 없음\",\n","                'plot': \"정보 없음\"\n","            }\n","\n","    def generate_Leedongjin_review(self, movie_title):\n","        \"\"\"\n","        영화 제목을 바탕으로 이동진 평론가 스타일의 한줄평을 생성합니다.\n","        영화 정보는 자동으로 생성합니다.\n","        \"\"\"\n","        # 영화 정보 생성\n","        movie_info = self.generate_movie_info(movie_title)\n","\n","        print(f\"\\n영화 '{movie_title}'에 대한 이동진 평론가 스타일의 한줄평을 생성합니다...\")\n","\n","        # 이동진 평론가의 리뷰 예시\n","        examples = []\n","        for review in self.Leedongjin_reviews[:10]:  # 학습 데이터로 10개만 사용\n","            examples.append(f\"영화: {review['movie_title']}\\n한줄평: {review['review']}\")\n","\n","        examples_text = \"\\n\\n\".join(examples)\n","\n","        # Gemini API에 전송할 프롬프트 구성\n","        prompt = f\"\"\"\n","        당신은 영화평론가 이동진의 문체와 관점을 완벽하게 구사할 수 있는 평론가입니다.\n","        다음은 이동진 평론가의 실제 한줄평 예시입니다:\n","        {examples_text}\n","\n","        다음은 영화 \"{movie_info['title']}\"에 대한 정보입니다:\n","        줄거리: {movie_info['plot']}\n","        감독: {movie_info['director']}\n","        주연: {movie_info['actors']}\n","        장르: {movie_info['genre']}\n","\n","        위 정보를 바탕으로, 영화 \"{movie_info['title']}\"에 대한 이동진 평론가 스타일의 한줄평을 작성해주세요.\n","\n","        이동진 평론가의 특징:\n","        1. 간결하면서도 문학적인 표현 사용\n","        2. 영화의 핵심 주제나 미학적 특징을 날카롭게 포착\n","        3. 비유와 은유를 효과적으로 활용\n","        4. 문장이 대체로 짧고 압축적임\n","\n","        한줄평만 작성하고 다른 설명이나 인사말은 포함하지 마세요.\n","        80자 이내의 짧은 한줄평으로 작성해주세요.\n","        \"\"\"\n","\n","        try:\n","            response = self.model.generate_content(prompt)\n","            review = response.text.strip()\n","\n","            # 불필요한 텍스트 제거\n","            review = re.sub(r'^[\"\\'\"]|[\"\\'\"]$', '', review)\n","            review = re.sub(r'^한줄평: ', '', review)\n","\n","            print(\"\\n생성된 이동진 스타일의 한줄평:\")\n","            print(f\"영화: {movie_title}\")\n","            print(f\"한줄평: {review}\")\n","\n","            # HTML 결과 생성 (위젯 형태로 표시)\n","            self.display_result_widget(movie_info, review)\n","\n","            return {\n","                'movie_title': movie_title,\n","                'Leedongjin_review': review,\n","                'movie_info': movie_info\n","            }\n","\n","        except Exception as e:\n","            print(f\"한줄평 생성 중 오류 발생: {e}\")\n","            return None\n","\n","    def display_result_widget(self, movie_info, review):\n","        \"\"\"결과를 시각적 위젯으로 표시합니다.\"\"\"\n","        title = movie_info.get('title', '제목 없음')\n","        director = movie_info.get('director', '감독 정보 없음')\n","        actors = movie_info.get('actors', '배우 정보 없음')\n","        genre = movie_info.get('genre', '장르 정보 없음')\n","        release = movie_info.get('release', '개봉일 정보 없음')\n","\n","        # 결과 위젯 HTML\n","        html = f\"\"\"\n","        <div style=\"font-family:Arial;padding:20px;background:#f8f9fa;border-radius:15px;margin:20px 0;box-shadow:0 4px 6px rgba(0,0,0,0.1);\">\n","            <h2 style=\"color:#333;margin-bottom:15px;text-align:center;\">이동진 평론가 스타일 한줄평</h2>\n","            <div style=\"margin-bottom:20px;\">\n","                <div>\n","                    <h3 style=\"margin:0 0 10px 0;color:#0076CE;\">{title}</h3>\n","                    <p style=\"margin:5px 0;\"><span style=\"font-weight:bold;\">감독:</span> {director}</p>\n","                    <p style=\"margin:5px 0;\"><span style=\"font-weight:bold;\">출연:</span> {actors}</p>\n","                    <p style=\"margin:5px 0;\"><span style=\"font-weight:bold;\">장르:</span> {genre}</p>\n","                    <p style=\"margin:5px 0;\"><span style=\"font-weight:bold;\">개봉:</span> {release}</p>\n","                </div>\n","            </div>\n","            <div style=\"background:#333;color:white;padding:20px;border-radius:8px;margin-top:20px;\">\n","                <p style=\"font-size:18px;font-style:italic;line-height:1.6;margin:0;text-align:center;\">\"{review}\"</p>\n","                <p style=\"font-size:14px;text-align:right;margin:10px 0 0;color:#aaa;\">- 이동진 평론가 스타일</p>\n","            </div>\n","        </div>\n","        \"\"\"\n","\n","        # 결과 표시\n","        display.display(HTML(html))\n","\n","# 메인 실행 코드\n","def main():\n","    print(\"=== 이동진 평론가 스타일 한줄평 생성기 ===\")\n","\n","    # 리뷰어 클래스 초기화\n","    reviewer = LeedongjinReviewer()\n","\n","    # 영화 제목 입력 안내\n","    print(\"\\n분석할 영화 제목을 입력하세요.\")\n","    print(\"예시: 어벤져스: 엔드게임, 기생충, 하얼빈\")\n","\n","    while True:\n","        movie_title = input(\"\\n영화 제목 (종료하려면 'q' 입력): \")\n","\n","        if movie_title.lower() == 'q':\n","            print(\"프로그램을 종료합니다.\")\n","            break\n","\n","        # 영화 정보 생성 및 한줄평 작성\n","        reviewer.generate_Leedongjin_review(movie_title)\n","        print(\"\\n다른 영화를 계속 분석하거나 'q'를 입력하여 종료하세요.\")\n","\n","# Google Colab에서 실행\n","if __name__ == \"__main__\":\n","    main()"]}]}